<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="test.why"/>
<theory name="Test" proved="true">
 <goal name="left_index&#39;vc" expl="VC for left_index" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="left_index&#39;vc.0" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.0.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="left_index&#39;vc.0.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="left_index&#39;vc.0.2" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
   </goal>
   <goal name="left_index&#39;vc.0.3" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="left_index&#39;vc.0.4" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.1" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.1.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
   <goal name="left_index&#39;vc.1.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.2" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.2.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
   <goal name="left_index&#39;vc.2.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.4" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.4.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
   <goal name="left_index&#39;vc.4.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="29"/></proof>
   </goal>
   <goal name="left_index&#39;vc.4.2" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="29"/></proof>
   </goal>
   <goal name="left_index&#39;vc.4.3" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.5" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.5.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="33"/></proof>
   </goal>
   <goal name="left_index&#39;vc.5.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.6" expl="loop variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.6.0" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.6.1" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.7" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.7.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.7.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.7.2" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.7.3" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.7.4" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.8" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.8.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
   </goal>
   <goal name="left_index&#39;vc.8.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.9" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.9.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="43"/></proof>
   </goal>
   <goal name="left_index&#39;vc.9.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="45"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.10" expl="loop variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.10.0" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.10.1" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.11.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.11.2" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.11.3" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index&#39;vc.11.4" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.12.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
   </goal>
   <goal name="left_index&#39;vc.12.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.13" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.13.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="43"/></proof>
   </goal>
   <goal name="left_index&#39;vc.13.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="left_index&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="left_index&#39;vc.14.2" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="left_index&#39;vc.14.3" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index&#39;vc.15" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index&#39;vc.15.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="left_index&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="prepare_positions&#39;vc" expl="VC for prepare_positions" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="prepare_positions&#39;vc.0" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.0.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.0.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.1" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.1.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.1.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="prepare_positions&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.3.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.48" steps="87441"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.4" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.4.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="82"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.4.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.47" steps="83398"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.5.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.6" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.6.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.6.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.7" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.7.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.7.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.8" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.8.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.8.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.9" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.9.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.9.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.10" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.10.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.11" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.11.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.11.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.12" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.12.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.12.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.13" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.13.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.13.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.14" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.14.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.15" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.15.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="40"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.15.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.16" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.16.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="42"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.17" expl="loop variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.17.0" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="45"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.17.1" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="45"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.18" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.18.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="45"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.18.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="45"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.19.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.20" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.20.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.20.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.21" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.21.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.22" expl="loop variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.22.0" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.22.1" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.23" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.23.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.23.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="48"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.24.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.25" expl="loop invariant preservation" proved="true">
  <transf name="instantiate" proved="true" arg1="LoopInvariant5" arg2="i">
   <goal name="prepare_positions&#39;vc.25.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.10" steps="337"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="instantiate" proved="true" arg1="LoopInvariant5" arg2="i">
   <goal name="prepare_positions&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.39" steps="433"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.08" steps="54"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.28" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.28.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.29" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.29.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="37"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.29.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="prepare_positions&#39;vc.30" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="prepare_positions&#39;vc.30.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="37"/></proof>
   </goal>
   <goal name="prepare_positions&#39;vc.30.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.07" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="inffer_low_high&#39;vc" expl="VC for inffer_low_high" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="inffer_low_high&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="inffer_low_high&#39;vc.1" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.1.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
   <goal name="inffer_low_high&#39;vc.1.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inffer_low_high&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="inffer_low_high&#39;vc.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="inffer_low_high&#39;vc.3.1" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.48" steps="86969"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inffer_low_high&#39;vc.4" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.4.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.44" steps="89333"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inffer_low_high&#39;vc.5" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.5.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="inffer_low_high&#39;vc.5.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inffer_low_high&#39;vc.6" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.6.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inffer_low_high&#39;vc.7" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.7.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
   </goal>
   <goal name="inffer_low_high&#39;vc.7.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inffer_low_high&#39;vc.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.59" steps="113708"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="inffer_low_high&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inffer_low_high&#39;vc.9.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="32"/></proof>
    </goal>
    <goal name="inffer_low_high&#39;vc.9.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="30"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="inffer_low_high&#39;vc.9.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inffer_low_high&#39;vc.9.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.20" steps="163"/></proof>
    </goal>
    <goal name="inffer_low_high&#39;vc.9.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.01" steps="30"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="inffer_low_high&#39;vc.10" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="inffer_low_high&#39;vc.10.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inffer_low_high&#39;vc.10.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="38"/></proof>
    </goal>
    <goal name="inffer_low_high&#39;vc.10.0.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="33"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="inffer_low_high&#39;vc.10.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inffer_low_high&#39;vc.10.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.10" steps="194"/></proof>
    </goal>
    <goal name="inffer_low_high&#39;vc.10.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="33"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="inffer_low_high&#39;vc.10.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="inffer_low_high&#39;vc.10.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
    </goal>
    <goal name="inffer_low_high&#39;vc.10.2.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="left_index_optim&#39;vc" expl="VC for left_index_optim" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="left_index_optim&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="left_index_optim&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="left_index_optim&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="left_index_optim&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="left_index_optim&#39;vc.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_optim&#39;vc.4.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="left_index_optim&#39;vc.4.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_optim&#39;vc.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_optim&#39;vc.5.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="left_index_optim&#39;vc.5.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_optim&#39;vc.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_optim&#39;vc.6.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="left_index_optim&#39;vc.6.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_optim&#39;vc.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_optim&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_optim&#39;vc.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_optim&#39;vc.8.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="left_index_optim&#39;vc.8.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="left_index_optim&#39;vc.8.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="left_index_optim&#39;vc.8.3" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
   <goal name="left_index_optim&#39;vc.8.4" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_optim&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_optim&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
   </goal>
   <goal name="left_index_optim&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="left_index_sorted&#39;vc" expl="VC for left_index_sorted" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="left_index_sorted&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="left_index_sorted&#39;vc.1" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.1.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="11"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.1.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.2" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.2.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.2.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.3" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.3.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.3.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.00" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.4" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.4.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="56"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.5" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.5.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="23"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.5.1" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="23"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.6" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.6.0" expl="loop invariant init" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.7" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.7.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="31"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.7.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.8" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.8.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="31"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.8.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.9" expl="loop variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.9.0" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.9.1" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.10" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.10.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.10.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.11" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.11.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.12" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.12.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="29"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.12.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="108"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.13" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.13.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="37"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.14" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.14.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.15" expl="index in array bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.15.0" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="31"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.15.1" expl="index in array bounds" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.16" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.16.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="37"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.16.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="41"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.17" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.17.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="1.38" steps="1247"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.17.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="2.15" steps="1492"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.18" expl="loop invariant preservation" proved="true">
  <transf name="instantiate" proved="true" arg1="LoopInvariant4" arg2="j">
   <goal name="left_index_sorted&#39;vc.18.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.05" steps="289"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.19.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="42"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="left_index_sorted&#39;vc.21" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.21.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.21.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="left_index_sorted&#39;vc.22" expl="out of loop bounds" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="left_index_sorted&#39;vc.22.0" expl="out of loop bounds (postcondition)" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="left_index_sorted&#39;vc.22.1" expl="out of loop bounds (postcondition)" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="left_index_sorted&#39;vc.22.1.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
    </goal>
    <goal name="left_index_sorted&#39;vc.22.1.1" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
